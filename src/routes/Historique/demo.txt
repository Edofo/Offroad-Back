##
# Vitesse Moyenne
## 

    ETAPE 1.

        Récupération de :
        --> Distance
        --> Temps
    
    ETAPE 2.

        Calculer :
        function vMoyenne(distance, time) {
            const a = distance / time;
            const b = Math.floor(a * 3.6);
            return b + 'km/h'
        }

    ETAPE 3.

        Récupération du résultat
    
********************************************************

##
# Temps
## 

    ETAPE 1.

        Récupération du temps
    
    ETAPE 2.

        Calculer :
            function dateHMS(time) {
                const addZero = function(v) { return v<10 ? '0' + v : v; };
                const d = new Date(time * 1000); // js fonctionne en milisecondes
                const t = [];
                t.push(addZero(d.getHours())+ 'h');
                t.push(addZero(d.getMinutes())+ 'm');
                return t.join(' ');
            }

    ETAPE 3.

        Récupération du résultat

********************************************************

##
# Longueur
#
# https://www.youtube.com/watch?v=H8aJJ_NQ7Jk
#
# https://github.com/manuelbieh/geolib
## 

    ETAPE 1.

        Récupération de la longueur
    
    ETAPE 2.

        Calculer :
            const longuer = 0;

            for(i = 0; i < temps; i++) {
                function(coord, coord2) {
                    const distance = getPreciseDistance(
                        {coord1}
                        {coord2}
                    )
                    return longuer + distance
                }
            }

    ETAPE 3.

        Récupération du résultat

********************************************************


##
# Vitesse Max
## 

    ETAPE 1.

        Récupération de la vitesse max :
        --> speed
    
    ETAPE 2.

        Calculer m/H en km/h :
            geolib.convertSpeed(speed, 'kmh'));

    ETAPE 3.

        Récupération du résultat

********************************************************