generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int      @id @default(autoincrement())
  pseudo            String
  email             String   @unique
  encryptedPassword String
  level             Level    @default(DEBUTANT)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  notif             Notif    @default(NO)
  posts             Post[]
  reports           Report[]
  likes             Like[]
}

model Spot {
  id         Int      @id @default(autoincrement())
  level      Level	  @default(DEBUTANT)
  adress     String   @unique
  infos      String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  posts      Post[]
  reports    Report[]
  likes      Like[]
}

model Post {
  id         Int      @id @default(autoincrement())
  content    String
  note       String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  spot       Spot?    @relation(fields: [spotId], references: [id])
  spotId     Int?
  author     User?    @relation(fields: [authorId], references: [id])
  authorId   Int?
}

model Report {
  id         Int      @id @default(autoincrement())
  content    String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  spot       Spot?    @relation(fields: [spotId], references: [id])
  spotId     Int?
  author     User?    @relation(fields: [authorId], references: [id])
  authorId   Int?
}

model Like {
  id         Int      @id @default(autoincrement()) 
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  spot       Spot?    @relation(fields: [spotId], references: [id])
  spotId     Int?
  author     User?    @relation(fields: [authorId], references: [id])
  authorId   Int?
}

enum Level {
  DEBUTANT
  AMATEUR
  EXPERT
  PRO
}

enum Notif {
  YES
  NO
}
